Mission Support System Usage Guidelines
=======================================

Welcome to the Mission Support System software for planning
atmospheric research flights. This document is intended to point you
into the right direction in order to get the software working on your
computer.

Please read the reference documentation

   Rautenhaus, M., Bauer, G., and Doernbrack, A.: A web service based
   tool to plan atmospheric research flights, Geosci. Model Dev., 5,
   55-71, doi:10.5194/gmd-5-55-2012, 2012.

and the paper's Supplement (which includes a tutorial) before using the
application. The documents are available at:

   http://www.geosci-model-dev.net/5/55/2012/gmd-5-55-2012.pdf
   http://www.geosci-model-dev.net/5/55/2012/gmd-5-55-2012-supplement.pdf

***************************************************************************

   When using this software, please acknowledge its use by citing the
   above mentioned reference documentation in any publication,
   presentation, report, etc. you create. Thank you.

***************************************************************************

1) Installation and configuration.

Installation and configuration notes can be found in the files
"INSTALL" and "INSTALL_WINDOWS.txt", located in the same directory as
this file.


2) OPTIONAL: Mission Support Web Map Service.

Once installation and configuration are complete, you can start the
Web Map Service application (provided you have forecast data to
visualise). The file "mss_wms_wsgi.standalone_paste.py" is an
executable Python script starting up a Paste HTTP server with the WMS
WSGI module. A short description of how to start the program is given
in its docstring at the beginning of the file. The file
"mss_wms_wsgi.wsgi" is intended to be used with an Apache web server
installation. "mss_wms_cl.py" is the command line interface for image
batch production.

A few notes: 

-- If you run the Paste WMS on a remote machine (e.g. on your office
   computer which you access via ssh from a campaign site), consider
   the ssh-tunnel option. Create the ssh connection with the "-L"
   option and start the WMS with the "-ssh" option.

-- The Paste WMS currently cannot run multithreaded (Apache does
   support multiple processes). This is due to that a single instance
   of the WSGI application handler class MSS_WMSResponse can create
   only one plot at a time (otherwise you get messed up plots when
   simultaneous requests occur). In the current implementation, only a
   single instance is passed to PASTE (to do all the initialisation
   work only once. To extend the software to handle simultaneous
   requests would probably involve creating a "factory" of
   MSS_WMSResponse instances.. If you want to do this, check if/how
   PASTE handles "worker" factories.

-- Creating the capabilities document can take very long (> 1 min) if
   the forecast data files have to be read for the first time (the WMS
   program opens all files and tries to determine the available data
   and elevation ranges). Once the information used for the
   capabilities are in the cache, however, a GetCapabilities request
   should return a document within 1-2 seconds.

-- A typical bottleneck for plot generation is when the forecast data
   files are located on a different computer than the WMS server. In
   this case, large amounts of data have to be transferred over the
   network. Hence, when possible, try to make sure the WMS runs on the
   same computer on which the input data files are hosted.


3) Mission Support User Interface.

The executable for the user interface application is "mss_pyui.py". It
does not provide any command line options. Warnings about CDAT
features are due to the NAppy package and can be ignored. The program
should open the main window of the user interface, from which you can
open further windows, including top view, side view and so on. In case
you get an exception on startup, your system probably misses one of
the required Python packages. Check the INSTALL file for information.

Configuration for the user interface is located in
"mss_settings.py". In this file, you can specify, for instance, the
default WMS URLs for the WMS client, the size of the local image cache
(the MSUI caches retrieved WMS images to accelerate repeated
retrievals), or the predefined locations that the user can select in
the table view.

A few options influencing the appearance of the displayed plots and
flight tracks (colours etc.) can be set directly in the user
interface (top view and side view).