Mission Support System Installation Guidelines.
===============================================

(May 2011, updated July 2012, February 2013, mr).

This document provides installation guidelines for installing the Mission
Support Web Map Service and User Interface on an OpenSuSE 11.X or 12.X
system. The MSS requires a couple of Python packages to be installed. Most of
these packages can be installed via YaST, however, a few have to be compiled
manually.

================================================================================
A1) Install the following packages via YaST (or your favourite rpm manager):
================================================================================

- python 2.6 or later, not python 3
- matplotlib 1.0, 1.1.1 or 1.2 or later, NOT 1.1.0 (contains a bug)
- numpy
- scipy
- pyqt4
- PIL (python-imaging)
- libgeos and -devel (for basemap, version 3.2 or higher)
- geopy
- netcdf4 and -devel, hdf5 and -devel (only for WMS, only if you can get
  the version required by python-netcdf4 -- see below)
- paste (only for WMS)

For OpenSuSE 11.4, the following repositories are required for the above
packages:
- http://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_11.4/
- http://download.opensuse.org/repositories/science/openSUSE_11.4/ 
- http://download.opensuse.org/repositories/Application:/Geo/openSUSE_11.4/

For OpenSuSE 12.2, these repositories are required:
- http://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_12.2/
- http://download.opensuse.org/repositories/Application:/Geo/openSUSE_12.2/

NOTE: For Matplotlib, make sure that the default backend is Qt4Agg. This setting
is specified in your home directory in the ~/.matplotlib/matplotlibrc file. See
http://matplotlib.sourceforge.net/users/customizing.html for further
information.

================================================================================
A2) Install the following packages from their sources:
================================================================================

These packages have to be installed from the sources (at the current time not
available as rpm):

- Matplotlib basemap (for both WMS and MSUI), http://matplotlib.sourceforge.net/
  * if you install basemap in your/local/python/directory, you need to rename the
    mpl_toolkits directory in your local python dir and create a link from
    basemap to /usr/lib/python/site-packages/mpl_toolkits/basemap, as Python
    doesn't accept two directories with the same name in its path

- python-netcdf4 (only required for WMS, you can omit this installation if you
  only use the MSUI), http://code.google.com/p/netcdf4-python/
  * python setup.py install --prefix=your/local/python/directory
  * Make sure that your/local/python/directory is contained in your PYTHONPATH

- possibly netcdf > 4.1 for python-netcdf4 (true for opensuse up to 11.4, for 12.2
  you can use the rpms)

- if you want to display flight tracks in NASA Ames format, you need NAppy, the
  "NASA Ames Processing in Python" package, version 0.2.2 (available from 
  http://home.badc.rl.ac.uk/astephens/software/nappy/). NOTE: Comment out the
  line "import aircraftData" in localRules/__init__.py; otherwise the package
  won't load on systems without CDAT.

Install these packages to a directory of your choice, however, make sure you
extent the PYTHONPATH environment variable to point to these directories (BASH:
add export PYTHONPATH=/...:$PYTHONPATH to your .bashrc, CSH: add setenv ..). You
should check that the following import statements work correctly before
proceeding.
>>> import mpl_toolkits.axes_grid1.inset_locator
>>> import mpl_toolkits.basemap
>>> import netCDF4
>>> import nappy


================================================================================
B) Checkout the MSS from GIT repo or extract the files from the MSS archive.
================================================================================

The latest version of the MSS can be checked out from

               https://bitbucket.org/wxmetvis/mss/

You can put the files into a directory of your choice.


================================================================================
C) Configure the MSS.
================================================================================

The last step is to adjust the software configuration to match your system.

User Interface:
  * Copy the files "mss_settings.py.sample", "mss.sideview.cfg.sample" and
    "mss.topview.cfg.sample" in the /msui directory to the corresponding file
    name without the ".sample".
  * Modify the file "mss_settings.py" (see comments in file).
  * To use flight performance computations, you will require aircraft
    performance data. Please contact us for DLR Falcon and HALO data.

Web Map Service:
  * Copy the file "mswms/mss_wms_settings.py.sample" to 
    "mswms/mss_wms_settings.py".
  * Copy the file "mslib/mss_config.py.sample" to "mslib/mss_config".
  * Modify the files "mss_wms_settings.py" (see comments in file) and
    "mss_config.py" (adjust the path settings at the end of the file).  

================================================================================
D) Enjoy the software!
================================================================================
