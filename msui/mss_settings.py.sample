"""Central configuration for the Mission Support System User Interface
   Application (MSUI).

This file is part of the Mission Support System User Interface (MSUI).

DESCRIPTION:
============

This file includes configuration settings central to the entire
Mission Support User Interface (MSUI). Among others, define
 -- available map projections
 -- vertical section interpolation options
 -- the lists of predefined web service URLs
 -- predefined waypoints for the table view
 -- batch products for the loop view
in this file.

THIS FILE IS THE ONLY PIECE OF THE CODE INTENDED TO BE MODIFIED BY
THE END USER!

So go ahead and customize your copy of the MSUI. :-)

"""

###############################################################################
###             Matplotlib Basemap Projection Parameters                    ###
###############################################################################

# The following parameters configure the map projections available in
# the top view. Define EPSG codes you require in terms of Matplotlib
# basemap parameters. Predefined map regions that should be selectable
# by the user in the top view user interface can also be defined.

# Table to translate CRS (coordinate reference system) codes to matplotlib
# basemap projection parameters.
crs_to_mpl_basemap_table = {
    "EPSG:4326": {"basemap": {"projection": "cyl"},
                  "bbox": "latlon"},
    "EPSG:9810": {"basemap": {"projection": "stere", "lat_0": 90., "lon_0": 0.},
                  "bbox": "metres"},
    "EPSG:77790000": {"basemap": {"projection": "stere", "lat_0": 90., "lon_0": 0.},
                      "bbox": "latlon"},
    "EPSG:77790010": {"basemap": {"projection": "stere", "lat_0": 90., "lon_0": 10.},
                      "bbox": "latlon"},
    "EPSG:77790335": {"basemap": {"projection": "stere", "lat_0": 90., "lon_0": -25.},
                      "bbox": "latlon"}
    }

# Predefined map regions to be listed in the corresponding topview combobox.
predefined_map_sections = {
    "01 Europe (cyl)": {"CRS": "EPSG:4326",
                        "map": {"llcrnrlon": -15.0, "llcrnrlat": 35.0,
                                "urcrnrlon": 30.0, "urcrnrlat": 65.0}},
    "02 Germany (cyl)": {"CRS": "EPSG:4326",
                         "map": {"llcrnrlon": 5.0, "llcrnrlat": 45.0,
                                 "urcrnrlon": 15.0, "urcrnrlat": 57.0}},
    "03 Europe (stereo)": {"CRS": "EPSG:77790010",
                           "map": {"llcrnrlon": -22.5, "llcrnrlat": 27.5,
                                   "urcrnrlon": 55.0, "urcrnrlat": 62.5}},
    "04 Germany (stereo)": {"CRS": "EPSG:77790010",
                            "map": {"llcrnrlon": -4.0, "llcrnrlat": 45.5,
                                    "urcrnrlon": 20.0, "urcrnrlat": 57.0}},
    "05 Spitsbergen L (stereo)": {"CRS": "EPSG:77790000",
                                  "map": {"llcrnrlon": -39.0, "llcrnrlat": 51.0,
                                          "urcrnrlon": 82.0, "urcrnrlat": 73.5}},
    "06 Spitsbergen S (stereo)": {"CRS": "EPSG:77790000",
                                  "map": {"llcrnrlon": -22.0, "llcrnrlat": 73.0,
                                          "urcrnrlon": 66.0, "urcrnrlat": 79.5}},
    "07 Global (cyl)": {"CRS": "EPSG:4326",
                        "map": {"llcrnrlon": -180.0, "llcrnrlat": -90.0,
                                "urcrnrlon": 180.0, "urcrnrlat": 90.0}},
    "08 Northern Hemisphere (stereo)": {"CRS": "EPSG:77790000",
                                        "map": {"llcrnrlon": -45.0, "llcrnrlat": 0.0,
                                                "urcrnrlon": 135.0, "urcrnrlat": 0.0}}
    }


################################################################################
###                               Side View.                                 ###
################################################################################

# The following two parameters are passed to the WMS in the BBOX
# argument when a vertical cross section is requested.

# Number of interpolation points used to interpolate the flight track
# to a great circle.
num_interpolation_points = 201

# Number of x-axis labels in the side view.
num_labels = 10
    

################################################################################
###                          Web Map Service Client.                         ###
################################################################################

# Settings for the WMS client. Set the URLs of WMS servers that appear
# by default in the WMS control (for examples, see
# http://external.opengis.org/twiki_public/bin/view/MetOceanDWG/MetocWMS_Servers).
# Also set the location of the image file cache and its size.

# URLs of default WMS servers.
default_WMS = [
    "http://localhost:8081/mss_wms",
    "https://ogcie.iblsoft.com/gfs",
    "https://ogcie.iblsoft.com/obs",
    "http://osm.omniscale.net/proxy/service",
    "http://geoservices.knmi.nl/cgi-bin/RADNL_OPER_R___25PCPRR_L3.cgi",
    "http://geoservices.knmi.nl/cgi-bin/OMI___OPER_R___TDCSO2__L3.cgi",
    "http://msgcpp-ogc-realtime.knmi.nl/msgrt.cgi",
    "http://wms.met.no/cgi-bin/getcapabilities.cgi?"\
        "map=/metno/eksternweb/wms/vhosts/interrisk/conf/sse.map",
    "http://"
    ]

default_VSEC_WMS = [
    "http://localhost:8081/mss_wms"
    ]

# WMS image cache settings:
# Path to the cache directory. Set to None to disable cache.
#wms_cache = "./wms_cache" # use this line for Windows!
import os
wms_cache = os.path.join(os.environ["HOME"], ".mss", "msui", "wms_cache") # comment this line under Windows!
# Maximum size of the cache in bytes.
wms_cache_max_size_bytes = 20 * 1024 * 1024
# Maximum age of a cached file in seconds.
wms_cache_max_age_seconds = 5 * 86400


################################################################################
###                   Table view and Flight Performance.                     ###
################################################################################

# Parameters for the table view: Default URLs of the flight
# performance service and the predefined locations that the user can
# select in the table view (to quickly specify new waypoints).

default_FPS = [
    "http://localhost:8082/performance"
    ]

locations = {
    "EDMO": (48.08, 11.28),
    "Hannover": (52.37, 9.74),
    "Hamburg": (53.55, 9.99),
    "Juelich": (50.92, 6.36),
    "Leipzig": (51.34, 12.37),
    "Muenchen": (48.14, 11.57),
    "Stuttgart": (48.78, 9.18),
    "Wien": (48.20833, 16.373064),
    "Zugspitze": (47.42, 10.98)
    }

###############################################################################
###           Main application: Template for new flight tracks              ###
###############################################################################

# Flight track template that is used when a new flight track is
# created. Specify a list of place names that can be found in the
# "locations" dictionary defined above.
new_flighttrack_template = ["EDMO", "Juelich", "Hamburg"]


################################################################################
###                          Loopview configuration.                         ###
################################################################################

# LoopView configuration: The products defined in the following
# dictionary are displayed by the ProductChooserDialog in the
# loopview.

loop_configuration = {
    "ECMWF forecasts": {
        # URL to the Mission Support website at which the batch image
        # products are located.
        "url": "http://www.your-server.de/forecasts",
        # Initialisation times every init_timestep hours.
        "init_timestep": 12,
        # Products available on the webpage. Add new products here!
        # Each product listed here will be loaded as one group, so
        # that the defined times can be navigated with <wheel> and
        # the defined levels can be navigated with <shift+wheel>.
        # Times not found in the listed range of forecast_steps
        # are ignored, its hence save to define the entire forecast
        # range with the smalled available time step.
        "products": {
            "Geopotential and Wind": {
                "abbrev": "geop",
                "regions": {"Europe": "eur", "Germany": "de"},
                "levels": [200, 250, 300, 500, 700, 850, 925],
                "forecast_steps": range(0, 240, 3)},
            "Temperature": {
                "abbrev": "temp",
                "regions": {"Europe": "eur", "Germany": "de"},
                "levels": [200, 250, 300, 500, 700, 850, 925],
                "forecast_steps": range(0, 240, 3)},
            "Equivalent Potential Temperature": {
                "abbrev": "eqpt",
                "regions": {"Europe": "eur", "Germany": "de"},
                "levels": [500, 700, 850, 925],
                "forecast_steps": range(0, 240, 3)},
            "Relative Humidity": {
                "abbrev": "rhu",
                "regions": {"Europe": "eur", "Germany": "de"},
                "levels": [200, 250, 300, 500, 700, 850, 925],
                "forecast_steps": range(0, 243, 3)},
            "Vertical Velocity": {
                "abbrev": "vert",
                "regions": {"Europe": "eur", "Germany": "de"},
                "levels": [200, 250, 300, 500, 700, 850, 925],
                "forecast_steps": range(0, 243, 3)}
            }
        }
    }


################################################################################
###                        Trajectory view configuration.                    ###
################################################################################

# Trajectory tool: When NASA Ames files are opened, the following
# variables will be used for lon/lat/pressure:

traj_nas_lon_identifier = ["GPS LON", "LONGITUDE"]
traj_nas_lat_identifier = ["GPS LAT", "LATITUDE"]
traj_nas_p_identifier = ["STATIC PRESSURE"]
